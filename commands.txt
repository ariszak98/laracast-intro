Useful Composer + Laravel Commands + MySQL commands ::

1. composer create-project laravel/laravel {project_name}
    Tells Composer to download the "laravel/laravel" library and CREATE a NEW Laravel
    project inside the NEW folder named: "project_name"

2. php artisan serve
    Tells php to run the "artisan" CLI executable and if that runs inside a Laravel
    projects it spins up a Local Development server at "localhost:8000"

3. php artisan make:controller {controller_name}
    Tells artisan to CREATE a new Controller at location "app/Http/{controller_name}

4. php artisan view:clear
    Clears the CACHED Views in Laravel (so any changes, change indeed imediatly)

5. sudo /usr/local/mysql/support-files/mysql.server [start/stop]
    Starts or Stops a MySQL Server

6. php artisan migrate
    Tells Artisan to migrate all database files inside of "database/migrations/" folder

7. php artisan migrate:fresh
    DROPs everything in the connected database and migrates again

8. php artisan make:migration {migration_name}
    Creates a new migration DB file inside of "database/migrations/" folder

9. php artisan make:model {model_name}
    Creates a new Model at location "app/Models/{model_name}"

10. php artisan make:middleware {middleware_name}
    Creates a new Middleware at location "app/Http/Middleware/{middleware_name}

11. php artisan make:policy {policy_name} --model={model_name}
    Creates a new Policy named {policy_name} which is tied to the Model {model_name}
    at location "app/Policies/{policy_name}"
    (When making a Policy like that Laravel automatically Registers it for us)

12. php artisan make:migration {migration_name} --table={table_name}
    Creates a new Migration ON TOP of an existing table called {table_name}

13. php artisan storage:link
    Creates a shortcut of "storage" folder (where all uploaded stuff go - but is not publicly accessible)
    under the "public" folder (which is publicly accessible) so that uploaded files can also exist inside
    a public to the web folder for further use.

14. php artisan db:seed
    This db:seed command will simply add new items to your tables but will 
    not edit or delete any of your existing data.

15. php artisan migrate:fresh --seed
    This command will completely erase all of your tables and data, then use your migration 
    files to re-build all the tables, and finally use our seed data to populate the tables.

16. php artisan vendor:publish --provider="Laravel\Scout\ScoutServiceProvider" 
    It defined as project's provider the Laravel's Scout (it needs to be downloaded with composer first)

17. npm install
    Uses NodeJS's npm to install all packages inside "package.json"

18. npm run dev 
    Starts a dev server that watches for any real-time changes and applies them to our app

19. npm run build 
    It builds the up-to-here steps we made to the app (like a checkpoint) so that we dont needs
    "npm run dev" active to see changes up-to-here.

20. php artisan make:event {event_name}
    Creates an Event at location "app/Events/{event_name}" named {event_name}

21. php artisan make:listener {listener_name}
    Creates a Listener at location "app/Listeners/{listener_name}" named {listener_name}